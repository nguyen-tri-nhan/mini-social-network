name: Build jar

on:
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-18.04

    steps:

      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 8

#      - name: Set up Nodejs
#        uses: actions/setup-node@v2
#        with:
#          node-version: '10'

      - name: Cache maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

#      - name: Cache npm packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Build frontend
#        working-directory: frontend
#        env:
#          NODE_OPTIONS: "--max-old-space-size=8192"
#        run:
#          set -x
#          npm ci
#          npm run build


      - name: Build jar
        run: |
          mvn -Dskip.npm=true -DskipTests=true clean package

      - name: Run project
        run: |
          docker-compose up -d --build

      - name: Waiting for process
        uses: juliangruber/sleep-action@v1
        with:
          time: 30s

      - name: CURL
        run: |
          curl http://localhost:8081
#
#      - name: getLog
#        if: ${{ always() }}
#        run: |
#          docker-compose logs --no-color >> log.txt
#
#      - name: Keep log file in artifact
#        if: ${{ always() }}
#        run: |
#          mkdir logArtifact
#          cp log.txt logArtifact
#
#      - name: Upload log artifact
#        if: ${{ always() }}
#        uses: actions/upload-artifact@v2
#        with:
#          name: Log
#          path: logArtifact